version: '3'
services:
  app:
    build:
      context: backend
    depends_on:
      - postgres
    volumes:
    - ./backend/logs/:/app/logs
    # NOTE: используйте volume mount для подключения папки скриптов для оркестрации
    - ./scripts/:/scripts:ro
    # Сюда уйдет collected_static после ./manage.py collectstatic
    - collected_static:/app/collected_static:rw
    restart: always
    entrypoint: ["/scripts/wait-for-it.sh", "postgres:5432", "--", "/app/entrypoint.sh"]

  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: postgres
    expose:
      - 5432
    ports:
    - 54325:5432
    volumes:
    - ./postgres/sql:/docker-entrypoint-initdb.d:ro
    - pg_data:/var/lib/postgresql
    restart: always

  nginx:
    build:
      context: frontend
    depends_on:
      - app
    ports:
      - 80:80
    volumes:
    # NOTE: collected_static генерится на бекенде (ну вот так, да)
    # пока что передаем в nginx через volume mount
    - collected_static:/app/collected_static
    restart: always

  database_backup_service:
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - ./postgres/db_backups:/backups
    links:
      - postgres
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=drec_stud_site
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      # - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      # - BACKUP_KEEP_WEEKS=4
      # - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080

  redis:
    image: redis
    volumes:
    - redis_data:/data
    ports:
    - 6379:6379
    expose:
      - 6379
    restart: always

  vk_bot:
    build:
      context: vk_bot/
    depends_on:
      - postgres
      - redis
    volumes:
      # NOTE: используйте volume mount для подключения папки скриптов для оркестрации
    - ./scripts:/scripts:ro
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=drec_stud_site
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
    entrypoint: ["/scripts/wait-for-it.sh", "redis:6379", "--", "/app/entrypoint.sh"]

  money_return_service:
    build:
      context: machine_closed_watchdog/
    depends_on:
      - postgres
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: drec_stud_site
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      # NOTE: используйте volume mount для подключения папки скриптов для оркестрации
    - ./scripts:/scripts:ro
    entrypoint: ["/scripts/wait-for-it.sh", "postgres:5432", "--", "/app/entrypoint.sh"]


volumes:
  pg_data:
  redis_data:
  collected_static: